# Generated by Selenium IDE
import unittest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestPorezni(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def tearDown(self):
        self.driver.quit()

    def test_porezni(self):
        self.driver.get("https://duznici.porezna-uprava.hr/fo/svi/1.html")
        self.driver.set_window_size(1920, 1040)
        tableOfInterest=self.driver.find_element(By.CLASS_NAME,"dataTable")
        rowsInTable=tableOfInterest.find_elements(By.TAG_NAME,"tr")
        finalTable=[]
        headerRow=[]
        ### let's collect the table header first to avoid repeating it later
        for th in rowsInTable[0].find_elements(By.TAG_NAME,"td"):
            headerRow.append(th.text)
        ### save the headerRow at the beginning of the table
        finalTable.append(headerRow)
        for rowIdx in range(1,len(rowsInTable)): #skip the header row so we start from 1 instead of 0...
            row=rowsInTable[rowIdx]
            columnsInRow=row.find_elements(By.TAG_NAME,"td")
            finalRow=[]
            #last row will not have any useful data, so we check how many columns in that row...
            if len(columnsInRow)==15:
                for column in columnsInRow:
                    #print(column.text)
                    finalRow.append(column.text)
                finalTable.append(finalRow)
        for row in finalTable:
            print(row)
        # assert self.driver.find_element(By.CSS_SELECTOR, ".evenRow:nth-child(2) > td:nth-child(2)").text == "MIRKO RAPIÄ†"
        # self.driver.find_element(By.LINK_TEXT, ">").click()
        # self.driver.find_element(By.LINK_TEXT, ">>").click()
